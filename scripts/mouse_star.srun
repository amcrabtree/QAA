#!/bin/bash
#SBATCH --partition=bgmp        	### Partition (like a queue in PBS)
#SBATCH --job-name=qaa       	    ### Job Name
#SBATCH --output=star-%j.log   	    ### File in which to store job output
#SBATCH --error=star-%j.err    	    ### File in which to store job error messages
#SBATCH --time=0-20:00:00       	### Wall clock time limit in Days-HH:MM:SS
#SBATCH --nodes=1               	### Number of nodes needed for the job
#SBATCH --cpus-per-task=8       	### Number of CPUs to be used per task
#SBATCH --account=bgmp          	### Account used for job submission
#SBATCH --mail-user=acrabtre@uoregon.edu    ### email for job submission notifications
#SBATCH --mail-type=ALL         	### specifies types of notification emails to send

## load conda environment
conda activate qaa

## assign variables
d=/projects/bgmp/acrabtre/bioinfo/Bi623/QAA/star
f_read=/projects/bgmp/acrabtre/bioinfo/Bi623/QAA/trim/Undetermined.1.trim.fastq.gz
r_read=/projects/bgmp/acrabtre/bioinfo/Bi623/QAA/trim/Undetermined.2.trim.fastq.gz
prfx="Undetermined_Mmus_"
samfile=$d/${prfx}Aligned.out.sam

cd $d

## run STAR to generate genome indexes
/usr/bin/time -v STAR \
    --runThreadN 8 \
    --runMode genomeGenerate \
    --genomeDir $d/mmus \
    --genomeFastaFiles $d/mmus/Mus_musculus.GRCm39.dna.primary_assembly.fa \
    --sjdbGTFfile $d/mmus/Mus_musculus.GRCm39.104.gtf

## run STAR to assemble reads to reference genome
/usr/bin/time -v STAR --runThreadN 8 --runMode alignReads \
    --outFilterMultimapNmax 3 \
    --outSAMunmapped Within KeepPairs \
    --alignIntronMax 1000000 --alignMatesGapMax 1000000 \
    --readFilesCommand zcat \
    --readFilesIn $f_read $r_read \
    --genomeDir $d/mmus \
    --outFileNamePrefix $d/$prfx

## run python script to get counts of mapped and unmapped reads
python /projects/bgmp/acrabtre/bioinfo/Bi623/QAA/scripts/inspector_sam.py $samfile > $d/${prfx}map_counts.txt

## run HTseq to count reads that map to features 
htseq-count --stranded=no $samfile $d/mmus/Mus_musculus.GRCm39.104.gtf > $d/${prfx}hts.genecounts
htseq-count --stranded=yes $samfile $d/mmus/Mus_musculus.GRCm39.104.gtf > $d/${prfx}hts_str.genecounts

######################## RUN STAR ON SAMPLE 2 ########################

## assign variables
d=/projects/bgmp/acrabtre/bioinfo/Bi623/QAA/star
f_read=/projects/bgmp/acrabtre/bioinfo/Bi623/QAA/trim/2_2B_control.1.trim.fastq.gz
r_read=/projects/bgmp/acrabtre/bioinfo/Bi623/QAA/trim/2_2B_control.2.trim.fastq.gz
prfx="2_2B_control_Mmus_"
samfile=$d/${prfx}Aligned.out.sam

## run STAR to assemble reads to reference genome
/usr/bin/time -v STAR --runThreadN 8 --runMode alignReads \
    --outFilterMultimapNmax 3 \
    --outSAMunmapped Within KeepPairs \
    --alignIntronMax 1000000 --alignMatesGapMax 1000000 \
    --readFilesCommand zcat \
    --readFilesIn $f_read $r_read \
    --genomeDir $d/mmus \
    --outFileNamePrefix $d/$prfx

## run python script to get counts of mapped and unmapped reads
python /projects/bgmp/acrabtre/bioinfo/Bi623/QAA/scripts/inspector_sam.py $samfile > $d/${prfx}map_counts.txt

## run HTseq to count reads that map to features 
htseq-count --stranded=no $samfile $d/mmus/Mus_musculus.GRCm39.104.gtf > $d/${prfx}hts.genecounts
htseq-count --stranded=yes $samfile $d/mmus/Mus_musculus.GRCm39.104.gtf > $d/${prfx}hts_str.genecounts